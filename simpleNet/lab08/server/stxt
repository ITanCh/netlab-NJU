Established TCP connections,server is ready
[Server] find an empty TCB, position: 0 
[Server] port(88) created a new TCB
son: recv seg 88, seq :0 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State LISTENING
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :0
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :-2147483648 ,ack :0
son :checkchecksum result:32767
[Server] Checksum Error!
son: recv seg 88, seq :4 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :0
[Server] ACK to client(87)
son: recv seg 88, seq :1468 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :0
[Server] ACK to client(87)
son: recv seg 88, seq :2932 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :0
[Server] ACK to client(87)
son: recv seg 88, seq :4396 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :0
[Server] ACK to client(87)
son: seg lost!
[Server] Seg Lost!
son: recv seg 88, seq :7324 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :0
[Server] ACK to client(87)
son: seg lost!
[Server] Seg Lost!
son: recv seg 88, seq :10252 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :0
[Server] ACK to client(87)
son: recv seg 88, seq :11716 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :0
[Server] ACK to client(87)
[Server] port(88) connection successfully
[Server] begin to fetch data
son: recv seg 88, seq :0 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:4
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :4
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :4 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :1468
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :1468 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :2932
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :2932 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :4396
[Server] finish sending ACK to client(87)
son: seg lost!
[Server] Seg Lost!
son: recv seg 88, seq :5860 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :4396
[Server] ACK to client(87)
son: recv seg 88, seq :7324 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :4396
[Server] ACK to client(87)
son: recv seg 88, seq :8788 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :4396
[Server] ACK to client(87)
son: seg lost!
[Server] Seg Lost!
son: recv seg 88, seq :11716 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :4396
[Server] ACK to client(87)
son: recv seg 88, seq :13180 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :4396
[Server] ACK to client(87)
son: recv seg 88, seq :14644 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :4396
[Server] ACK to client(87)
son: recv seg 88, seq :16108 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :4396
[Server] ACK to client(87)
son: recv seg 88, seq :17572 ,ack :0
son :checkchecksum result:16384
[Server] Checksum Error!
son: recv seg 88, seq :4396 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :5860
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :5860 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :7324
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :7324 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :8788
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :8788 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :10252
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :10252 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :11716
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :11716 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :13180
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :13180 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :14644
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :14644 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :16108
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :16108 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :17572
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :17572 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :19036
[Server] finish sending ACK to client(87)
get file length: 981553
[Server] begin to fetch data
son: recv seg 88, seq :19036 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :20500
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :20500 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :21964
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :21964 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :23428
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :23428 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :24892
[Server] finish sending ACK to client(87)
son: seg lost!
[Server] Seg Lost!
son: recv seg 88, seq :26356 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :24892
[Server] ACK to client(87)
son: recv seg 88, seq :27820 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :24892
[Server] ACK to client(87)
son: recv seg 88, seq :29284 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :24892
[Server] ACK to client(87)
son: recv seg 88, seq :30748 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :24892
[Server] ACK to client(87)
son: recv seg 88, seq :32212 ,ack :0
son :checkchecksum result:65531
[Server] Checksum Error!
son: recv seg 88, seq :19036 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :24892
[Server] ACK to client(87)
son: recv seg 88, seq :20500 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :24892
[Server] ACK to client(87)
son: recv seg 88, seq :21964 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :24892
[Server] ACK to client(87)
son: recv seg 88, seq :23428 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :24892
[Server] ACK to client(87)
son: recv seg 88, seq :24892 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :26356
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :26356 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :27820
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :27820 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :29284
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :29284 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :30748
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :30748 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :32212
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :32212 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :33676
[Server] finish sending ACK to client(87)
son: seg lost!
[Server] Seg Lost!
son: recv seg 88, seq :35140 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :33676
[Server] ACK to client(87)
son: recv seg 88, seq :36604 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :33676
[Server] ACK to client(87)
son: recv seg 88, seq :38068 ,ack :0
son :checkchecksum result:16384
[Server] Checksum Error!
son: recv seg 88, seq :39532 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :33676
[Server] ACK to client(87)
son: recv seg 88, seq :40996 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :33676
[Server] ACK to client(87)
son: recv seg 88, seq :42460 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :33676
[Server] ACK to client(87)
son: recv seg 88, seq :43924 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :33676
[Server] ACK to client(87)
son: recv seg 88, seq :45388 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :33676
[Server] ACK to client(87)
son: recv seg 88, seq :46852 ,ack :0
son :checkchecksum result:65531
[Server] Checksum Error!
son: recv seg 88, seq :33676 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :35140
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :35140 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :36604
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :36604 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :38068
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :38068 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :39532
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :39532 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :40996
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :40996 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :42460
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :42460 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :43924
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :43924 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :45388
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :45388 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :46852
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :46852 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :48316
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :48316 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :49780
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :49780 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :51244
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :51244 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :52708
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :52708 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :54172
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :54172 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :55636
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :55636 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :57100
[Server] finish sending ACK to client(87)
son: seg lost!
[Server] Seg Lost!
son: recv seg 88, seq :58564 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :57100
[Server] ACK to client(87)
son: recv seg 88, seq :60028 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :57100
[Server] ACK to client(87)
son: recv seg 88, seq :61492 ,ack :0
son :checkchecksum result:4
[Server] Checksum Error!
son: recv seg 88, seq :48316 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :57100
[Server] ACK to client(87)
son: recv seg 88, seq :49780 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :57100
[Server] ACK to client(87)
son: recv seg 88, seq :51244 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :57100
[Server] ACK to client(87)
son: recv seg 88, seq :52708 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :57100
[Server] ACK to client(87)
son: recv seg 88, seq :54172 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :57100
[Server] ACK to client(87)
son: recv seg 88, seq :55636 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :57100
[Server] ACK to client(87)
son: recv seg 88, seq :57100 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :58564
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :58564 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :60028
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :60028 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :61492
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :61492 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :62956
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :62956 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :64420
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :64420 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :65884
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :65884 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :67348
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :67348 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :68812
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :68812 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :70276
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :70276 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :71740
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :71740 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :73204
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :73204 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :74668
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :74668 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :76132
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :76132 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :77596
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :77596 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :79060
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :79060 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :80524
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :80524 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :81988
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :81988 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :83452
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :83452 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :84916
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :84916 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :86380
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :86380 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :87844
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :87844 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :89308
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :89308 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :90772
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :90772 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :92236
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :92236 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :93700
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :93700 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :95164
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :95164 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :96628
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :96628 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :98092
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :98092 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :99556
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :99556 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :1020
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :86380 ,ack :0
son :checkchecksum result:2048
[Server] Checksum Error!
son: recv seg 88, seq :87844 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :1020
[Server] ACK to client(87)
son: recv seg 88, seq :89308 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :1020
[Server] ACK to client(87)
son: recv seg 88, seq :90772 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :1020
[Server] ACK to client(87)
son: recv seg 88, seq :92236 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :1020
[Server] ACK to client(87)
son: recv seg 88, seq :93700 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :1020
[Server] ACK to client(87)
son: recv seg 88, seq :95164 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :1020
[Server] ACK to client(87)
son: recv seg 88, seq :96628 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :1020
[Server] ACK to client(87)
son: recv seg 88, seq :98092 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :1020
[Server] ACK to client(87)
son: recv seg 88, seq :99556 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :1020
[Server] ACK to client(87)
son: recv seg 88, seq :1020 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :2484
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :2484 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :3948
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :3948 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :5412
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :5412 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :6876
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :6876 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :8340
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :8340 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :9804
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :9804 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :11268
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :11268 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :12732
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :12732 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :14196
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :14196 ,ack :0
son :checkchecksum result:65527
[Server] Checksum Error!
son: recv seg 88, seq :15660 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :14196
[Server] ACK to client(87)
son: recv seg 88, seq :17124 ,ack :0
son :checkchecksum result:1024
[Server] Checksum Error!
son: recv seg 88, seq :18588 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :14196
[Server] ACK to client(87)
son: recv seg 88, seq :20052 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :14196
[Server] ACK to client(87)
son: recv seg 88, seq :21516 ,ack :0
son :checkchecksum result:65519
[Server] Checksum Error!
son: recv seg 88, seq :22980 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :14196
[Server] ACK to client(87)
son: recv seg 88, seq :24444 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :14196
[Server] ACK to client(87)
son: recv seg 88, seq :25908 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :14196
[Server] ACK to client(87)
son: recv seg 88, seq :27372 ,ack :0
son :checkchecksum result:65519
[Server] Checksum Error!
son: recv seg 88, seq :14196 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :15660
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :15660 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :17124
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :17124 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :18588
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :18588 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :20052
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :20052 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :21516
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :21516 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :22980
[Server] finish sending ACK to client(87)
son: seg lost!
[Server] Seg Lost!
son: recv seg 88, seq :24444 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :22980
[Server] ACK to client(87)
son: recv seg 88, seq :25908 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :22980
[Server] ACK to client(87)
son: recv seg 88, seq :27372 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :22980
[Server] ACK to client(87)
son: recv seg 88, seq :28836 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :22980
[Server] ACK to client(87)
son: recv seg 88, seq :30300 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :22980
[Server] ACK to client(87)
son: recv seg 88, seq :31764 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :22980
[Server] ACK to client(87)
son: recv seg 88, seq :33228 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :22980
[Server] ACK to client(87)
son: recv seg 88, seq :34692 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :22980
[Server] ACK to client(87)
son: recv seg 88, seq :36156 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :22980
[Server] ACK to client(87)
son: recv seg 88, seq :22980 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :24444
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :24444 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :25908
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :25908 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :27372
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :27372 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :28836
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :28836 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :30300
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :30300 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :31764
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :31764 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :33228
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :33228 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :34692
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :34692 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :36156
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :36156 ,ack :0
son :checkchecksum result:65407
[Server] Checksum Error!
son: recv seg 88, seq :37620 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :36156
[Server] ACK to client(87)
son: recv seg 88, seq :39084 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :36156
[Server] ACK to client(87)
son: recv seg 88, seq :40548 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :36156
[Server] ACK to client(87)
son: recv seg 88, seq :42012 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :36156
[Server] ACK to client(87)
son: recv seg 88, seq :43476 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :36156
[Server] ACK to client(87)
son: recv seg 88, seq :44940 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :36156
[Server] ACK to client(87)
son: recv seg 88, seq :46404 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :36156
[Server] ACK to client(87)
son: recv seg 88, seq :47868 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :36156
[Server] ACK to client(87)
son: recv seg 88, seq :49332 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :36156
[Server] ACK to client(87)
son: recv seg 88, seq :36156 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :37620
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :37620 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :39084
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :39084 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :40548
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :40548 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :42012
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :42012 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :43476
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :43476 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :44940
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :44940 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :46404
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :46404 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :47868
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :47868 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :49332
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :49332 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :50796
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :50796 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :52260
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :52260 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :53724
[Server] finish sending ACK to client(87)
son: seg lost!
[Server] Seg Lost!
son: recv seg 88, seq :55188 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :53724
[Server] ACK to client(87)
son: recv seg 88, seq :56652 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :53724
[Server] ACK to client(87)
son: seg lost!
[Server] Seg Lost!
son: recv seg 88, seq :59580 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :53724
[Server] ACK to client(87)
son: recv seg 88, seq :61044 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :53724
[Server] ACK to client(87)
son: recv seg 88, seq :62508 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :53724
[Server] ACK to client(87)
son: recv seg 88, seq :63972 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :53724
[Server] ACK to client(87)
son: recv seg 88, seq :50796 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :53724
[Server] ACK to client(87)
son: recv seg 88, seq :52260 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :53724
[Server] ACK to client(87)
son: recv seg 88, seq :53724 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :55188
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :55188 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :56652
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :56652 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :58116
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :58116 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :59580
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :59580 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :61044
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :61044 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :62508
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :62508 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :63972
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :63972 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :65436
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :65436 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :66900
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :66900 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :68364
[Server] finish sending ACK to client(87)
son: seg lost!
[Server] Seg Lost!
son: recv seg 88, seq :69828 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :68364
[Server] ACK to client(87)
son: recv seg 88, seq :71292 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :68364
[Server] ACK to client(87)
son: recv seg 88, seq :72756 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :68364
[Server] ACK to client(87)
son: recv seg 88, seq :74220 ,ack :0
son :checkchecksum result:2
[Server] Checksum Error!
son: recv seg 88, seq :75684 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :68364
[Server] ACK to client(87)
son: recv seg 88, seq :77148 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :68364
[Server] ACK to client(87)
son: recv seg 88, seq :78612 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :68364
[Server] ACK to client(87)
son: recv seg 88, seq :80076 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :68364
[Server] ACK to client(87)
son: recv seg 88, seq :81540 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :68364
[Server] ACK to client(87)
son: recv seg 88, seq :68364 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :69828
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :69828 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :71292
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :71292 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :72756
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :72756 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :74220
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :74220 ,ack :0
son :checkchecksum result:32767
[Server] Checksum Error!
son: recv seg 88, seq :75684 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :74220
[Server] ACK to client(87)
son: recv seg 88, seq :77148 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :74220
[Server] ACK to client(87)
son: recv seg 88, seq :78612 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :74220
[Server] ACK to client(87)
son: recv seg 88, seq :80076 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :74220
[Server] ACK to client(87)
son: recv seg 88, seq :81540 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :74220
[Server] ACK to client(87)
son: recv seg 88, seq :83004 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :74220
[Server] ACK to client(87)
son: recv seg 88, seq :84468 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :74220
[Server] ACK to client(87)
son: recv seg 88, seq :85932 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :74220
[Server] ACK to client(87)
son: recv seg 88, seq :87396 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :74220
[Server] ACK to client(87)
son: recv seg 88, seq :74220 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :75684
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :75684 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :77148
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :77148 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :78612
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :78612 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :80076
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :80076 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :81540
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :81540 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :83004
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :83004 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :84468
[Server] finish sending ACK to client(87)
son: seg lost!
[Server] Seg Lost!
son: recv seg 88, seq :85932 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :84468
[Server] ACK to client(87)
son: recv seg 88, seq :87396 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :84468
[Server] ACK to client(87)
son: recv seg 88, seq :88860 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :84468
[Server] ACK to client(87)
son: recv seg 88, seq :90324 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :84468
[Server] ACK to client(87)
son: recv seg 88, seq :91788 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :84468
[Server] ACK to client(87)
son: recv seg 88, seq :93252 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :84468
[Server] ACK to client(87)
son: recv seg 88, seq :94716 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :84468
[Server] ACK to client(87)
son: recv seg 88, seq :96180 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :84468
[Server] ACK to client(87)
son: recv seg 88, seq :97644 ,ack :0
son :checkchecksum result:65533
[Server] Checksum Error!
son: recv seg 88, seq :84468 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :85932
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :85932 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :87396
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :87396 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :88860
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :88860 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :90324
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :90324 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :91788
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :91788 ,ack :0
son :checkchecksum result:64
[Server] Checksum Error!
son: recv seg 88, seq :93252 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :91788
[Server] ACK to client(87)
son: recv seg 88, seq :94716 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :91788
[Server] ACK to client(87)
son: seg lost!
[Server] Seg Lost!
son: recv seg 88, seq :97644 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :91788
[Server] ACK to client(87)
son: recv seg 88, seq :99108 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :91788
[Server] ACK to client(87)
son: seg lost!
[Server] Seg Lost!
son: recv seg 88, seq :2036 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :91788
[Server] ACK to client(87)
son: recv seg 88, seq :3500 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :91788
[Server] ACK to client(87)
son: recv seg 88, seq :4964 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :91788
[Server] ACK to client(87)
son: recv seg 88, seq :91788 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :93252
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :93252 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :94716
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :94716 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :96180
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :96180 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :97644
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :97644 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :99108
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :99108 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :572
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :572 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :2036
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :2036 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :3500
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :3500 ,ack :0
son :checkchecksum result:1024
[Server] Checksum Error!
son: recv seg 88, seq :4964 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :3500
[Server] ACK to client(87)
son: recv seg 88, seq :6428 ,ack :0
son :checkchecksum result:65533
[Server] Checksum Error!
son: recv seg 88, seq :7892 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :3500
[Server] ACK to client(87)
son: recv seg 88, seq :9356 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :3500
[Server] ACK to client(87)
son: recv seg 88, seq :10820 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :3500
[Server] ACK to client(87)
son: recv seg 88, seq :12284 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :3500
[Server] ACK to client(87)
son: recv seg 88, seq :13748 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :3500
[Server] ACK to client(87)
son: recv seg 88, seq :15212 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :3500
[Server] ACK to client(87)
son: recv seg 88, seq :16676 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :3500
[Server] ACK to client(87)
son: recv seg 88, seq :3500 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :4964
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :4964 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :6428
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :6428 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :7892
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :7892 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :9356
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :9356 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :10820
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :10820 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :12284
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :12284 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :13748
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :13748 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :15212
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :15212 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :16676
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :16676 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :18140
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :18140 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :19604
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :19604 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :21068
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :21068 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :22532
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :22532 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :23996
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :23996 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :25460
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :25460 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :26924
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :26924 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :28388
[Server] finish sending ACK to client(87)
son: seg lost!
[Server] Seg Lost!
son: recv seg 88, seq :29852 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :28388
[Server] ACK to client(87)
son: recv seg 88, seq :31316 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :28388
[Server] ACK to client(87)
son: recv seg 88, seq :18140 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :28388
[Server] ACK to client(87)
son: recv seg 88, seq :19604 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :28388
[Server] ACK to client(87)
son: recv seg 88, seq :21068 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :28388
[Server] ACK to client(87)
son: recv seg 88, seq :22532 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :28388
[Server] ACK to client(87)
son: recv seg 88, seq :23996 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :28388
[Server] ACK to client(87)
son: recv seg 88, seq :25460 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :28388
[Server] ACK to client(87)
son: recv seg 88, seq :26924 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :28388
[Server] ACK to client(87)
son: recv seg 88, seq :28388 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :29852
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :29852 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :31316
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :31316 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :32780
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :32780 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :34244
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :34244 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :35708
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :35708 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :37172
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :37172 ,ack :0
son :checkchecksum result:32767
[Server] Checksum Error!
son: recv seg 88, seq :38636 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :37172
[Server] ACK to client(87)
son: recv seg 88, seq :40100 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :37172
[Server] ACK to client(87)
son: recv seg 88, seq :41564 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :37172
[Server] ACK to client(87)
son: recv seg 88, seq :43028 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :37172
[Server] ACK to client(87)
son: recv seg 88, seq :44492 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :37172
[Server] ACK to client(87)
son: recv seg 88, seq :45956 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :37172
[Server] ACK to client(87)
son: recv seg 88, seq :47420 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :37172
[Server] ACK to client(87)
son: recv seg 88, seq :48884 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :37172
[Server] ACK to client(87)
son: recv seg 88, seq :50348 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :37172
[Server] ACK to client(87)
son: recv seg 88, seq :37172 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :38636
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :38636 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :40100
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :40100 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :41564
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :41564 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :43028
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :43028 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :44492
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :44492 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :45956
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :45956 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :47420
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :47420 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :48884
[Server] finish sending ACK to client(87)
son: seg lost!
[Server] Seg Lost!
son: recv seg 88, seq :50348 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :48884
[Server] ACK to client(87)
son: recv seg 88, seq :51812 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :48884
[Server] ACK to client(87)
son: recv seg 88, seq :53276 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :48884
[Server] ACK to client(87)
son: recv seg 88, seq :54740 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :48884
[Server] ACK to client(87)
son: recv seg 88, seq :56204 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :48884
[Server] ACK to client(87)
son: recv seg 88, seq :57668 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :48884
[Server] ACK to client(87)
son: recv seg 88, seq :59132 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :48884
[Server] ACK to client(87)
son: recv seg 88, seq :60596 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :48884
[Server] ACK to client(87)
son: recv seg 88, seq :62060 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :48884
[Server] ACK to client(87)
son: recv seg 88, seq :48884 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :50348
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :50348 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :51812
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :51812 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :53276
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :53276 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :54740
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :54740 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :56204
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :56204 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :57668
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :57668 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :59132
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :59132 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :60596
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :60596 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :62060
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :62060 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :63524
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :63524 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :64988
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :64988 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :66452
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :66452 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :67916
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :67916 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :69380
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :69380 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :70844
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :70844 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :72308
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :72308 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :73772
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :73772 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :75236
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :75236 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :76700
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :76700 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :78164
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :78164 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :79628
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :79628 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :81092
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :81092 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :82556
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :82556 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :84020
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :84020 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :85484
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :85484 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :86948
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :86948 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :88412
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :88412 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :89876
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :89876 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :91340
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :91340 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :92804
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :92804 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :94268
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :94268 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :95732
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :95732 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :97196
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :97196 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :98660
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :98660 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :124
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :124 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :1588
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :1588 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :3052
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :3052 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :4516
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :4516 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :5980
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :5980 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :7444
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :7444 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :8908
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :8908 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :10372
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :10372 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :11836
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :11836 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :13300
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :13300 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :14764
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :14764 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :16228
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :16228 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :17692
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :17692 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :19156
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :19156 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :20620
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :20620 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :22084
[Server] finish sending ACK to client(87)
son: seg lost!
[Server] Seg Lost!
son: recv seg 88, seq :23548 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :22084
[Server] ACK to client(87)
son: recv seg 88, seq :25012 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :22084
[Server] ACK to client(87)
son: recv seg 88, seq :26476 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :22084
[Server] ACK to client(87)
son: recv seg 88, seq :27940 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :22084
[Server] ACK to client(87)
son: recv seg 88, seq :29404 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :22084
[Server] ACK to client(87)
son: recv seg 88, seq :30868 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :22084
[Server] ACK to client(87)
son: recv seg 88, seq :32332 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :22084
[Server] ACK to client(87)
son: recv seg 88, seq :33796 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :22084
[Server] ACK to client(87)
son: recv seg 88, seq :35260 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :22084
[Server] ACK to client(87)
son: recv seg 88, seq :22084 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :23548
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :23548 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :25012
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :25012 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :26476
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :26476 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :27940
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :27940 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :29404
[Server] finish sending ACK to client(87)
son: seg lost!
[Server] Seg Lost!
son: recv seg 88, seq :30868 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :29404
[Server] ACK to client(87)
son: recv seg 88, seq :32332 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :29404
[Server] ACK to client(87)
son: recv seg 88, seq :33796 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :29404
[Server] ACK to client(87)
son: recv seg 88, seq :35260 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :29404
[Server] ACK to client(87)
son: recv seg 88, seq :36724 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :29404
[Server] ACK to client(87)
son: recv seg 88, seq :38188 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :29404
[Server] ACK to client(87)
son: recv seg 88, seq :39652 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :29404
[Server] ACK to client(87)
son: recv seg 88, seq :41116 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :29404
[Server] ACK to client(87)
son: seg lost!
[Server] Seg Lost!
son: recv seg 88, seq :29404 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :30868
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :30868 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :32332
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :32332 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :33796
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :33796 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :35260
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :35260 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :36724
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :36724 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :38188
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :38188 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :39652
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :39652 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :41116
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :41116 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :42580
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :42580 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :44044
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :44044 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :45508
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :45508 ,ack :0
son :checkchecksum result:65023
[Server] Checksum Error!
son: recv seg 88, seq :46972 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :45508
[Server] ACK to client(87)
son: recv seg 88, seq :48436 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :45508
[Server] ACK to client(87)
son: recv seg 88, seq :49900 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :45508
[Server] ACK to client(87)
son: recv seg 88, seq :51364 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :45508
[Server] ACK to client(87)
son: recv seg 88, seq :52828 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :45508
[Server] ACK to client(87)
son: recv seg 88, seq :54292 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :45508
[Server] ACK to client(87)
son: recv seg 88, seq :55756 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :45508
[Server] ACK to client(87)
son: recv seg 88, seq :57220 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :45508
[Server] ACK to client(87)
son: recv seg 88, seq :58684 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :45508
[Server] ACK to client(87)
son: recv seg 88, seq :45508 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :46972
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :46972 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :48436
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :48436 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :49900
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :49900 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :51364
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :51364 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :52828
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :52828 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :54292
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :54292 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :55756
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :55756 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :57220
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :57220 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :58684
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :58684 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :60148
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :60148 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :61612
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :61612 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :63076
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :63076 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :64540
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :64540 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :66004
[Server] finish sending ACK to client(87)
son: seg lost!
[Server] Seg Lost!
son: recv seg 88, seq :67468 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :66004
[Server] ACK to client(87)
son: recv seg 88, seq :68932 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :66004
[Server] ACK to client(87)
son: recv seg 88, seq :70396 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :66004
[Server] ACK to client(87)
son: recv seg 88, seq :71860 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :66004
[Server] ACK to client(87)
son: recv seg 88, seq :73324 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :66004
[Server] ACK to client(87)
son: recv seg 88, seq :74788 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :66004
[Server] ACK to client(87)
son: recv seg 88, seq :76252 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :66004
[Server] ACK to client(87)
son: recv seg 88, seq :77716 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :66004
[Server] ACK to client(87)
son: recv seg 88, seq :79180 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :66004
[Server] ACK to client(87)
son: recv seg 88, seq :66004 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :67468
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :67468 ,ack :0
son :checkchecksum result:64
[Server] Checksum Error!
son: recv seg 88, seq :68932 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :67468
[Server] ACK to client(87)
son: recv seg 88, seq :70396 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :67468
[Server] ACK to client(87)
son: recv seg 88, seq :71860 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :67468
[Server] ACK to client(87)
son: recv seg 88, seq :73324 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :67468
[Server] ACK to client(87)
son: recv seg 88, seq :74788 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :67468
[Server] ACK to client(87)
son: recv seg 88, seq :76252 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :67468
[Server] ACK to client(87)
son: recv seg 88, seq :77716 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :67468
[Server] ACK to client(87)
son: recv seg 88, seq :79180 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :67468
[Server] ACK to client(87)
son: recv seg 88, seq :80644 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :67468
[Server] ACK to client(87)
son: recv seg 88, seq :67468 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :68932
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :68932 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :70396
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :70396 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :71860
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :71860 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :73324
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :73324 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :74788
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :74788 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :76252
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :76252 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :77716
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :77716 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :79180
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :79180 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :80644
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :80644 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :82108
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :82108 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :83572
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :83572 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :85036
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :85036 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :86500
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :86500 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :87964
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :87964 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :89428
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :89428 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :90892
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :90892 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :92356
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :92356 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :93820
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :93820 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :95284
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :95284 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :96748
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :96748 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :98212
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :98212 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :99676
[Server] finish sending ACK to client(87)
son: seg lost!
[Server] Seg Lost!
son: recv seg 88, seq :1140 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :99676
[Server] ACK to client(87)
son: recv seg 88, seq :2604 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :99676
[Server] ACK to client(87)
son: recv seg 88, seq :4068 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :99676
[Server] ACK to client(87)
son: recv seg 88, seq :5532 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :99676
[Server] ACK to client(87)
son: recv seg 88, seq :6996 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :99676
[Server] ACK to client(87)
son: recv seg 88, seq :8460 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :99676
[Server] ACK to client(87)
son: recv seg 88, seq :9924 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :99676
[Server] ACK to client(87)
son: recv seg 88, seq :11388 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :99676
[Server] ACK to client(87)
son: recv seg 88, seq :12852 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :99676
[Server] ACK to client(87)
son: recv seg 88, seq :99676 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :1140
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :1140 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :2604
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :2604 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :4068
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :4068 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :5532
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :5532 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :6996
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :6996 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :8460
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :8460 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :9924
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :9924 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :11388
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :11388 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :12852
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :12852 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :14316
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :14316 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :15780
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :15780 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :17244
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :17244 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :18708
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :18708 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :20172
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :20172 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :21636
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :21636 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :23100
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :23100 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :24564
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :24564 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :26028
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :26028 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :27492
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :27492 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :28956
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :14316 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :28956
[Server] ACK to client(87)
son: recv seg 88, seq :15780 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :28956
[Server] ACK to client(87)
son: recv seg 88, seq :17244 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :28956
[Server] ACK to client(87)
son: recv seg 88, seq :18708 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :28956
[Server] ACK to client(87)
son: recv seg 88, seq :20172 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :28956
[Server] ACK to client(87)
son: recv seg 88, seq :21636 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :28956
[Server] ACK to client(87)
son: recv seg 88, seq :23100 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :28956
[Server] ACK to client(87)
son: recv seg 88, seq :24564 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :28956
[Server] ACK to client(87)
son: recv seg 88, seq :26028 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :28956
[Server] ACK to client(87)
son: recv seg 88, seq :27492 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :28956
[Server] ACK to client(87)
son: recv seg 88, seq :28956 ,ack :0
son :checkchecksum result:4
[Server] Checksum Error!
son: recv seg 88, seq :30420 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :28956
[Server] ACK to client(87)
son: recv seg 88, seq :31884 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :28956
[Server] ACK to client(87)
son: recv seg 88, seq :33348 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :28956
[Server] ACK to client(87)
son: recv seg 88, seq :34812 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :28956
[Server] ACK to client(87)
son: recv seg 88, seq :36276 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :28956
[Server] ACK to client(87)
son: recv seg 88, seq :37740 ,ack :0
son :checkchecksum result:512
[Server] Checksum Error!
son: recv seg 88, seq :39204 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :28956
[Server] ACK to client(87)
son: recv seg 88, seq :40668 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :28956
[Server] ACK to client(87)
son: recv seg 88, seq :42132 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :28956
[Server] ACK to client(87)
son: seg lost!
[Server] Seg Lost!
son: recv seg 88, seq :30420 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :28956
[Server] ACK to client(87)
son: recv seg 88, seq :31884 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :28956
[Server] ACK to client(87)
son: recv seg 88, seq :33348 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :28956
[Server] ACK to client(87)
son: recv seg 88, seq :34812 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :28956
[Server] ACK to client(87)
son: recv seg 88, seq :36276 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :28956
[Server] ACK to client(87)
son: recv seg 88, seq :37740 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :28956
[Server] ACK to client(87)
son: recv seg 88, seq :39204 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :28956
[Server] ACK to client(87)
son: recv seg 88, seq :40668 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :28956
[Server] ACK to client(87)
son: recv seg 88, seq :42132 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :28956
[Server] ACK to client(87)
son: recv seg 88, seq :28956 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :30420
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :30420 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :31884
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :31884 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :33348
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :33348 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :34812
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :34812 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :36276
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :36276 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :37740
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :37740 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :39204
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :39204 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :40668
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :40668 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :42132
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :42132 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :43596
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :43596 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :45060
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :45060 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :46524
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :46524 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :47988
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :47988 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :49452
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :49452 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :50916
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :50916 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :52380
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :52380 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :53844
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :53844 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :55308
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :55308 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :56772
[Server] finish sending ACK to client(87)
son: seg lost!
[Server] Seg Lost!
son: recv seg 88, seq :58236 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :56772
[Server] ACK to client(87)
son: recv seg 88, seq :59700 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :56772
[Server] ACK to client(87)
son: recv seg 88, seq :61164 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :56772
[Server] ACK to client(87)
son: recv seg 88, seq :62628 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :56772
[Server] ACK to client(87)
son: recv seg 88, seq :49452 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :56772
[Server] ACK to client(87)
son: recv seg 88, seq :50916 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :56772
[Server] ACK to client(87)
son: recv seg 88, seq :52380 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :56772
[Server] ACK to client(87)
son: recv seg 88, seq :53844 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :56772
[Server] ACK to client(87)
son: recv seg 88, seq :55308 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :56772
[Server] ACK to client(87)
son: recv seg 88, seq :56772 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :58236
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :58236 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :59700
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :59700 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :61164
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :61164 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :62628
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :62628 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :64092
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :64092 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :65556
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :65556 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :67020
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :67020 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :68484
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :68484 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :69948
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :69948 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :71412
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :71412 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :72876
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :72876 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :74340
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :74340 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :75804
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :75804 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :77268
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :77268 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :78732
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :64092 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :78732
[Server] ACK to client(87)
son: recv seg 88, seq :65556 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :78732
[Server] ACK to client(87)
son: recv seg 88, seq :67020 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :78732
[Server] ACK to client(87)
son: recv seg 88, seq :68484 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :78732
[Server] ACK to client(87)
son: recv seg 88, seq :69948 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :78732
[Server] ACK to client(87)
son: recv seg 88, seq :71412 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :78732
[Server] ACK to client(87)
son: recv seg 88, seq :72876 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :78732
[Server] ACK to client(87)
son: recv seg 88, seq :74340 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :78732
[Server] ACK to client(87)
son: recv seg 88, seq :75804 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :78732
[Server] ACK to client(87)
son: recv seg 88, seq :77268 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :78732
[Server] ACK to client(87)
son: recv seg 88, seq :78732 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :80196
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :80196 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :81660
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :81660 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :83124
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :83124 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :84588
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :84588 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :86052
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :86052 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :87516
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :87516 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :88980
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :88980 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :90444
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :90444 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :91908
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :91908 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :93372
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :78732 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :93372
[Server] ACK to client(87)
son: recv seg 88, seq :80196 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :93372
[Server] ACK to client(87)
son: recv seg 88, seq :81660 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :93372
[Server] ACK to client(87)
son: recv seg 88, seq :83124 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :93372
[Server] ACK to client(87)
son: recv seg 88, seq :84588 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :93372
[Server] ACK to client(87)
son: recv seg 88, seq :86052 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :93372
[Server] ACK to client(87)
son: recv seg 88, seq :87516 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :93372
[Server] ACK to client(87)
son: recv seg 88, seq :88980 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :93372
[Server] ACK to client(87)
son: recv seg 88, seq :90444 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :93372
[Server] ACK to client(87)
son: recv seg 88, seq :91908 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :93372
[Server] ACK to client(87)
son: recv seg 88, seq :93372 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :94836
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :94836 ,ack :0
son :checkchecksum result:256
[Server] Checksum Error!
son: recv seg 88, seq :96300 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :94836
[Server] ACK to client(87)
son: recv seg 88, seq :97764 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :94836
[Server] ACK to client(87)
son: seg lost!
[Server] Seg Lost!
son: recv seg 88, seq :692 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :94836
[Server] ACK to client(87)
son: recv seg 88, seq :2156 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :94836
[Server] ACK to client(87)
son: recv seg 88, seq :3620 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :94836
[Server] ACK to client(87)
son: recv seg 88, seq :5084 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :94836
[Server] ACK to client(87)
son: recv seg 88, seq :6548 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :94836
[Server] ACK to client(87)
son: recv seg 88, seq :8012 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :94836
[Server] ACK to client(87)
son: recv seg 88, seq :94836 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :96300
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :96300 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :97764
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :97764 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :99228
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :99228 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :692
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :692 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :2156
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :2156 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :3620
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :3620 ,ack :0
son :checkchecksum result:61439
[Server] Checksum Error!
son: recv seg 88, seq :5084 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :3620
[Server] ACK to client(87)
son: seg lost!
[Server] Seg Lost!
son: recv seg 88, seq :8012 ,ack :0
son :checkchecksum result:4
[Server] Checksum Error!
son: recv seg 88, seq :9476 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :3620
[Server] ACK to client(87)
son: recv seg 88, seq :10940 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :3620
[Server] ACK to client(87)
son: recv seg 88, seq :12404 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :3620
[Server] ACK to client(87)
son: recv seg 88, seq :13868 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :3620
[Server] ACK to client(87)
son: recv seg 88, seq :15332 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :3620
[Server] ACK to client(87)
son: recv seg 88, seq :16796 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :3620
[Server] ACK to client(87)
son: recv seg 88, seq :3620 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :5084
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :5084 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :6548
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :6548 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :8012
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :8012 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :9476
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :9476 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :10940
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :10940 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :12404
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :12404 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :13868
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :13868 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :15332
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :15332 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :16796
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :16796 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :18260
[Server] finish sending ACK to client(87)
son: seg lost!
[Server] Seg Lost!
son: recv seg 88, seq :19724 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :18260
[Server] ACK to client(87)
son: recv seg 88, seq :21188 ,ack :0
son :checkchecksum result:1
[Server] Checksum Error!
son: recv seg 88, seq :22652 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :18260
[Server] ACK to client(87)
son: recv seg 88, seq :24116 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :18260
[Server] ACK to client(87)
son: recv seg 88, seq :25580 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :18260
[Server] ACK to client(87)
son: seg lost!
[Server] Seg Lost!
son: recv seg 88, seq :28508 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :18260
[Server] ACK to client(87)
son: recv seg 88, seq :29972 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :18260
[Server] ACK to client(87)
son: recv seg 88, seq :31436 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :18260
[Server] ACK to client(87)
son: recv seg 88, seq :18260 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :19724
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :19724 ,ack :0
son :checkchecksum result:32
[Server] Checksum Error!
son: recv seg 88, seq :21188 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :19724
[Server] ACK to client(87)
son: recv seg 88, seq :22652 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :19724
[Server] ACK to client(87)
son: recv seg 88, seq :24116 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :19724
[Server] ACK to client(87)
son: recv seg 88, seq :25580 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :19724
[Server] ACK to client(87)
son: seg lost!
[Server] Seg Lost!
son: recv seg 88, seq :28508 ,ack :0
son :checkchecksum result:65531
[Server] Checksum Error!
son: recv seg 88, seq :29972 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :19724
[Server] ACK to client(87)
son: recv seg 88, seq :31436 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :19724
[Server] ACK to client(87)
son: recv seg 88, seq :32900 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :19724
[Server] ACK to client(87)
son: recv seg 88, seq :19724 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :21188
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :21188 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :22652
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :22652 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :24116
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :24116 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :25580
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :25580 ,ack :0
son :checkchecksum result:32
[Server] Checksum Error!
son: recv seg 88, seq :27044 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :25580
[Server] ACK to client(87)
son: recv seg 88, seq :28508 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :25580
[Server] ACK to client(87)
son: seg lost!
[Server] Seg Lost!
son: recv seg 88, seq :31436 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :25580
[Server] ACK to client(87)
son: recv seg 88, seq :32900 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :25580
[Server] ACK to client(87)
son: recv seg 88, seq :34364 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :25580
[Server] ACK to client(87)
son: recv seg 88, seq :35828 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :25580
[Server] ACK to client(87)
son: recv seg 88, seq :37292 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :25580
[Server] ACK to client(87)
son: recv seg 88, seq :38756 ,ack :0
son :checkchecksum result:16
[Server] Checksum Error!
son: recv seg 88, seq :25580 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :27044
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :27044 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :28508
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :28508 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :29972
[Server] finish sending ACK to client(87)
son: seg lost!
[Server] Seg Lost!
son: recv seg 88, seq :31436 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :29972
[Server] ACK to client(87)
son: recv seg 88, seq :32900 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :29972
[Server] ACK to client(87)
son: recv seg 88, seq :34364 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :29972
[Server] ACK to client(87)
son: recv seg 88, seq :35828 ,ack :0
son :checkchecksum result:65531
[Server] Checksum Error!
son: recv seg 88, seq :37292 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :29972
[Server] ACK to client(87)
son: recv seg 88, seq :38756 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :29972
[Server] ACK to client(87)
son: recv seg 88, seq :40220 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :29972
[Server] ACK to client(87)
son: recv seg 88, seq :41684 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :29972
[Server] ACK to client(87)
son: recv seg 88, seq :43148 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :29972
[Server] ACK to client(87)
son: recv seg 88, seq :29972 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :31436
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :31436 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :32900
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :32900 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :34364
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :34364 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :35828
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :35828 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :37292
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :37292 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :38756
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :38756 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :40220
[Server] finish sending ACK to client(87)
son: seg lost!
[Server] Seg Lost!
son: recv seg 88, seq :41684 ,ack :0
son :checkchecksum result:8192
[Server] Checksum Error!
son: recv seg 88, seq :43148 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :40220
[Server] ACK to client(87)
son: recv seg 88, seq :44612 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :40220
[Server] ACK to client(87)
son: recv seg 88, seq :46076 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :40220
[Server] ACK to client(87)
son: recv seg 88, seq :47540 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :40220
[Server] ACK to client(87)
son: recv seg 88, seq :49004 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :40220
[Server] ACK to client(87)
son: recv seg 88, seq :50468 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :40220
[Server] ACK to client(87)
son: recv seg 88, seq :51932 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :40220
[Server] ACK to client(87)
son: recv seg 88, seq :53396 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :40220
[Server] ACK to client(87)
son: recv seg 88, seq :40220 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :41684
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :41684 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :43148
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :43148 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :44612
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :44612 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :46076
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :46076 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :47540
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :47540 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :49004
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :49004 ,ack :0
son :checkchecksum result:1
[Server] Checksum Error!
son: recv seg 88, seq :50468 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :49004
[Server] ACK to client(87)
son: recv seg 88, seq :51932 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :49004
[Server] ACK to client(87)
son: seg lost!
[Server] Seg Lost!
son: recv seg 88, seq :54860 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :49004
[Server] ACK to client(87)
son: recv seg 88, seq :56324 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :49004
[Server] ACK to client(87)
son: recv seg 88, seq :57788 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :49004
[Server] ACK to client(87)
son: recv seg 88, seq :59252 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :49004
[Server] ACK to client(87)
son: recv seg 88, seq :60716 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :49004
[Server] ACK to client(87)
son: recv seg 88, seq :62180 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :49004
[Server] ACK to client(87)
son: recv seg 88, seq :49004 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :50468
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :50468 ,ack :0
son :checkchecksum result:2048
[Server] Checksum Error!
son: recv seg 88, seq :51932 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :50468
[Server] ACK to client(87)
son: recv seg 88, seq :53396 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :50468
[Server] ACK to client(87)
son: recv seg 88, seq :54860 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :50468
[Server] ACK to client(87)
son: recv seg 88, seq :56324 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :50468
[Server] ACK to client(87)
son: recv seg 88, seq :57788 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :50468
[Server] ACK to client(87)
son: recv seg 88, seq :59252 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :50468
[Server] ACK to client(87)
son: recv seg 88, seq :60716 ,ack :0
son :checkchecksum result:4
[Server] Checksum Error!
son: recv seg 88, seq :62180 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :50468
[Server] ACK to client(87)
son: recv seg 88, seq :63644 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :50468
[Server] ACK to client(87)
son: recv seg 88, seq :50468 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :51932
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :51932 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :53396
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :53396 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :54860
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :54860 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :56324
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :56324 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :57788
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :57788 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :59252
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :59252 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :60716
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :60716 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :62180
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :62180 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :63644
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :63644 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :65108
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :65108 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :66572
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :66572 ,ack :0
son :checkchecksum result:2
[Server] Checksum Error!
son: recv seg 88, seq :68036 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :66572
[Server] ACK to client(87)
son: recv seg 88, seq :69500 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :66572
[Server] ACK to client(87)
son: recv seg 88, seq :70964 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :66572
[Server] ACK to client(87)
son: recv seg 88, seq :72428 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :66572
[Server] ACK to client(87)
son: recv seg 88, seq :73892 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :66572
[Server] ACK to client(87)
son: recv seg 88, seq :75356 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :66572
[Server] ACK to client(87)
son: recv seg 88, seq :76820 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :66572
[Server] ACK to client(87)
son: recv seg 88, seq :78284 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :66572
[Server] ACK to client(87)
son: recv seg 88, seq :65108 ,ack :0
son :checkchecksum result:65533
[Server] Checksum Error!
son: recv seg 88, seq :66572 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :68036
[Server] finish sending ACK to client(87)
son: seg lost!
[Server] Seg Lost!
son: recv seg 88, seq :69500 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :68036
[Server] ACK to client(87)
son: recv seg 88, seq :70964 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :68036
[Server] ACK to client(87)
son: recv seg 88, seq :72428 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :68036
[Server] ACK to client(87)
son: seg lost!
[Server] Seg Lost!
son: recv seg 88, seq :75356 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :68036
[Server] ACK to client(87)
son: seg lost!
[Server] Seg Lost!
son: recv seg 88, seq :78284 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :68036
[Server] ACK to client(87)
son: recv seg 88, seq :79748 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :68036
[Server] ACK to client(87)
son: seg lost!
[Server] Seg Lost!
son: recv seg 88, seq :68036 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :69500
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :69500 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :70964
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :70964 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :72428
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :72428 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :73892
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :73892 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :75356
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :75356 ,ack :0
son :checkchecksum result:65519
[Server] Checksum Error!
son: recv seg 88, seq :76820 ,ack :0
son :checkchecksum result:32767
[Server] Checksum Error!
son: recv seg 88, seq :78284 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :75356
[Server] ACK to client(87)
son: recv seg 88, seq :79748 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :75356
[Server] ACK to client(87)
son: recv seg 88, seq :81212 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :75356
[Server] ACK to client(87)
son: recv seg 88, seq :82676 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :75356
[Server] ACK to client(87)
son: recv seg 88, seq :84140 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :75356
[Server] ACK to client(87)
son: recv seg 88, seq :85604 ,ack :0
son :checkchecksum result:1
[Server] Checksum Error!
son: recv seg 88, seq :87068 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :75356
[Server] ACK to client(87)
son: recv seg 88, seq :88532 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :75356
[Server] ACK to client(87)
son: recv seg 88, seq :75356 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :76820
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :76820 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :78284
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :78284 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :79748
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :79748 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :81212
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :81212 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :82676
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :82676 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :84140
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :84140 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :85604
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :85604 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :87068
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :87068 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :88532
[Server] finish sending ACK to client(87)
son: seg lost!
[Server] Seg Lost!
son: recv seg 88, seq :89996 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :88532
[Server] ACK to client(87)
son: recv seg 88, seq :91460 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :88532
[Server] ACK to client(87)
son: recv seg 88, seq :92924 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :88532
[Server] ACK to client(87)
son: recv seg 88, seq :94388 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :88532
[Server] ACK to client(87)
son: recv seg 88, seq :95852 ,ack :0
son :checkchecksum result:65534
[Server] Checksum Error!
son: recv seg 88, seq :97316 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :88532
[Server] ACK to client(87)
son: recv seg 88, seq :98780 ,ack :0
son :checkchecksum result:32767
[Server] Checksum Error!
son: recv seg 88, seq :244 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :88532
[Server] ACK to client(87)
son: recv seg 88, seq :1708 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :88532
[Server] ACK to client(87)
son: recv seg 88, seq :88532 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :89996
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :89996 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :91460
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :91460 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :92924
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :92924 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :94388
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :94388 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :95852
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :95852 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :97316
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :97316 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :98780
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :98780 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :244
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :244 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :1708
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :1708 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :3172
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :3172 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :4636
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :4636 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :6100
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :6100 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :7564
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :7564 ,ack :0
son :checkchecksum result:65519
[Server] Checksum Error!
son: recv seg 88, seq :9028 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :7564
[Server] ACK to client(87)
son: recv seg 88, seq :10492 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :7564
[Server] ACK to client(87)
son: recv seg 88, seq :11956 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :7564
[Server] ACK to client(87)
son: recv seg 88, seq :13420 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :7564
[Server] ACK to client(87)
son: recv seg 88, seq :14884 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :7564
[Server] ACK to client(87)
son: recv seg 88, seq :16348 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :7564
[Server] ACK to client(87)
son: recv seg 88, seq :3172 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :7564
[Server] ACK to client(87)
son: recv seg 88, seq :4636 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :7564
[Server] ACK to client(87)
son: recv seg 88, seq :6100 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :7564
[Server] ACK to client(87)
son: recv seg 88, seq :7564 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :9028
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :9028 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :10492
[Server] finish sending ACK to client(87)
son: seg lost!
[Server] Seg Lost!
son: recv seg 88, seq :11956 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :10492
[Server] ACK to client(87)
son: recv seg 88, seq :13420 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :10492
[Server] ACK to client(87)
son: recv seg 88, seq :14884 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :10492
[Server] ACK to client(87)
son: recv seg 88, seq :16348 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :10492
[Server] ACK to client(87)
son: recv seg 88, seq :17812 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :10492
[Server] ACK to client(87)
son: recv seg 88, seq :19276 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :10492
[Server] ACK to client(87)
son: recv seg 88, seq :20740 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :10492
[Server] ACK to client(87)
son: recv seg 88, seq :22204 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :10492
[Server] ACK to client(87)
son: recv seg 88, seq :23668 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :10492
[Server] ACK to client(87)
son: recv seg 88, seq :10492 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :11956
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :11956 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :13420
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :13420 ,ack :0
son :checkchecksum result:65527
[Server] Checksum Error!
son: recv seg 88, seq :14884 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :13420
[Server] ACK to client(87)
son: recv seg 88, seq :16348 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :13420
[Server] ACK to client(87)
son: recv seg 88, seq :17812 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :13420
[Server] ACK to client(87)
son: recv seg 88, seq :19276 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :13420
[Server] ACK to client(87)
son: recv seg 88, seq :20740 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :13420
[Server] ACK to client(87)
son: recv seg 88, seq :22204 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :13420
[Server] ACK to client(87)
son: recv seg 88, seq :23668 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :13420
[Server] ACK to client(87)
son: recv seg 88, seq :25132 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :13420
[Server] ACK to client(87)
son: recv seg 88, seq :26596 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :13420
[Server] ACK to client(87)
son: recv seg 88, seq :13420 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :14884
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :14884 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :16348
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :16348 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :17812
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :17812 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :19276
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :19276 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :20740
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :20740 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :22204
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :22204 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :23668
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :23668 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :25132
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :25132 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :26596
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :26596 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :28060
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :28060 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :29524
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :29524 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :30988
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :30988 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :32452
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :32452 ,ack :0
son :checkchecksum result:64511
[Server] Checksum Error!
son: recv seg 88, seq :33916 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :32452
[Server] ACK to client(87)
son: recv seg 88, seq :35380 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :32452
[Server] ACK to client(87)
son: recv seg 88, seq :36844 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :32452
[Server] ACK to client(87)
son: recv seg 88, seq :38308 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :32452
[Server] ACK to client(87)
son: recv seg 88, seq :39772 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :32452
[Server] ACK to client(87)
son: recv seg 88, seq :26596 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :32452
[Server] ACK to client(87)
son: recv seg 88, seq :28060 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :32452
[Server] ACK to client(87)
son: recv seg 88, seq :29524 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :32452
[Server] ACK to client(87)
son: seg lost!
[Server] Seg Lost!
son: recv seg 88, seq :32452 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :33916
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :33916 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :35380
[Server] finish sending ACK to client(87)
son: seg lost!
[Server] Seg Lost!
son: recv seg 88, seq :36844 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :35380
[Server] ACK to client(87)
son: recv seg 88, seq :38308 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :35380
[Server] ACK to client(87)
son: recv seg 88, seq :39772 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :35380
[Server] ACK to client(87)
son: recv seg 88, seq :41236 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :35380
[Server] ACK to client(87)
son: recv seg 88, seq :42700 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :35380
[Server] ACK to client(87)
son: recv seg 88, seq :44164 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :35380
[Server] ACK to client(87)
son: recv seg 88, seq :45628 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :35380
[Server] ACK to client(87)
son: recv seg 88, seq :47092 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :35380
[Server] ACK to client(87)
son: recv seg 88, seq :48556 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :35380
[Server] ACK to client(87)
son: recv seg 88, seq :35380 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :36844
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :36844 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :38308
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :38308 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :39772
[Server] finish sending ACK to client(87)
son: recv seg 72, seq :39772 ,ack :0
son :checkchecksum result:16
[Server] Checksum Error!
son: recv seg 88, seq :41236 ,ack :0
son :checkchecksum result:4
[Server] Checksum Error!
son: recv seg 88, seq :42700 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :39772
[Server] ACK to client(87)
son: recv seg 88, seq :44164 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :39772
[Server] ACK to client(87)
son: recv seg 88, seq :45628 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :39772
[Server] ACK to client(87)
son: recv seg 88, seq :47092 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :39772
[Server] ACK to client(87)
son: recv seg 88, seq :48556 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :39772
[Server] ACK to client(87)
son: recv seg 88, seq :50020 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :39772
[Server] ACK to client(87)
son: recv seg 88, seq :51484 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :39772
[Server] ACK to client(87)
son: recv seg 88, seq :52948 ,ack :0
son :checkchecksum result:4096
[Server] Checksum Error!
son: recv seg 88, seq :39772 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :41236
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :41236 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :42700
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :42700 ,ack :0
son :checkchecksum result:32767
[Server] Checksum Error!
son: seg lost!
[Server] Seg Lost!
son: recv seg 88, seq :45628 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :42700
[Server] ACK to client(87)
son: recv seg 88, seq :47092 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :42700
[Server] ACK to client(87)
son: recv seg 88, seq :48556 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :42700
[Server] ACK to client(87)
son: recv seg 88, seq :50020 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :42700
[Server] ACK to client(87)
son: recv seg 88, seq :51484 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :42700
[Server] ACK to client(87)
son: seg lost!
[Server] Seg Lost!
son: recv seg 88, seq :54412 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :42700
[Server] ACK to client(87)
son: recv seg 88, seq :55876 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :42700
[Server] ACK to client(87)
son: recv seg 88, seq :42700 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :44164
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :44164 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :45628
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :45628 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :47092
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :47092 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :48556
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :48556 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :50020
[Server] finish sending ACK to client(87)
son: seg lost!
[Server] Seg Lost!
son: recv seg 88, seq :51484 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :50020
[Server] ACK to client(87)
son: seg lost!
[Server] Seg Lost!
son: recv seg 88, seq :54412 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :50020
[Server] ACK to client(87)
son: seg lost!
[Server] Seg Lost!
son: recv seg 88, seq :57340 ,ack :0
son :checkchecksum result:1
[Server] Checksum Error!
son: recv seg 88, seq :58804 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :50020
[Server] ACK to client(87)
son: recv seg 88, seq :60268 ,ack :0
son :checkchecksum result:64511
[Server] Checksum Error!
son: recv seg 88, seq :61732 ,ack :0
son :checkchecksum result:65471
[Server] Checksum Error!
son: recv seg 88, seq :63196 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :50020
[Server] ACK to client(87)
son: recv seg 88, seq :50020 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :51484
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :51484 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :52948
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :52948 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :54412
[Server] finish sending ACK to client(87)
son: seg lost!
[Server] Seg Lost!
son: recv seg 88, seq :55876 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :54412
[Server] ACK to client(87)
son: recv seg 88, seq :57340 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :54412
[Server] ACK to client(87)
son: recv seg 88, seq :58804 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :54412
[Server] ACK to client(87)
son: recv seg 88, seq :60268 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :54412
[Server] ACK to client(87)
son: recv seg 88, seq :61732 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :54412
[Server] ACK to client(87)
son: recv seg 88, seq :63196 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :54412
[Server] ACK to client(87)
son: recv seg 88, seq :64660 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :54412
[Server] ACK to client(87)
son: recv seg 88, seq :66124 ,ack :0
son :checkchecksum result:32767
[Server] Checksum Error!
son: recv seg 88, seq :67588 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :54412
[Server] ACK to client(87)
son: recv seg 88, seq :54412 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :55876
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :55876 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :57340
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :57340 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :58804
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :58804 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :60268
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :60268 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :61732
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :61732 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :63196
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :63196 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :64660
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :64660 ,ack :0
son :checkchecksum result:65023
[Server] Checksum Error!
son: recv seg 88, seq :66124 ,ack :0
son :checkchecksum result:64
[Server] Checksum Error!
son: seg lost!
[Server] Seg Lost!
son: recv seg 88, seq :69052 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :64660
[Server] ACK to client(87)
son: recv seg 88, seq :70516 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :64660
[Server] ACK to client(87)
son: recv seg 88, seq :71980 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :64660
[Server] ACK to client(87)
son: recv seg 88, seq :73444 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :64660
[Server] ACK to client(87)
son: recv seg 88, seq :74908 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :64660
[Server] ACK to client(87)
son: seg lost!
[Server] Seg Lost!
son: recv seg 88, seq :77836 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :64660
[Server] ACK to client(87)
son: recv seg 88, seq :64660 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :66124
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :66124 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :67588
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :67588 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :69052
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :69052 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :70516
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :70516 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :71980
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :71980 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :73444
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :73444 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :74908
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :74908 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :76372
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :76372 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :77836
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :77836 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :79300
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :79300 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :80764
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :80764 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :82228
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :82228 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :83692
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :83692 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :85156
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :85156 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :86620
[Server] finish sending ACK to client(87)
son: seg lost!
[Server] Seg Lost!
son: recv seg 88, seq :88084 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :86620
[Server] ACK to client(87)
son: recv seg 88, seq :89548 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :86620
[Server] ACK to client(87)
son: recv seg 88, seq :91012 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :86620
[Server] ACK to client(87)
son: recv seg 88, seq :92476 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :86620
[Server] ACK to client(87)
son: recv seg 88, seq :93940 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :86620
[Server] ACK to client(87)
son: recv seg 88, seq :95404 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :86620
[Server] ACK to client(87)
son: recv seg 88, seq :96868 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :86620
[Server] ACK to client(87)
son: recv seg 88, seq :98332 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :86620
[Server] ACK to client(87)
son: recv seg 88, seq :99796 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :86620
[Server] ACK to client(87)
son: recv seg 88, seq :86620 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :88084
[Server] finish sending ACK to client(87)
son: seg lost!
[Server] Seg Lost!
son: recv seg 88, seq :89548 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :88084
[Server] ACK to client(87)
son: recv seg 88, seq :91012 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :88084
[Server] ACK to client(87)
son: recv seg 88, seq :92476 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :88084
[Server] ACK to client(87)
son: recv seg 88, seq :93940 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :88084
[Server] ACK to client(87)
son: recv seg 88, seq :95404 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :88084
[Server] ACK to client(87)
son: recv seg 88, seq :96868 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :88084
[Server] ACK to client(87)
son: recv seg 88, seq :98332 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :88084
[Server] ACK to client(87)
son: seg lost!
[Server] Seg Lost!
son: recv seg 88, seq :1260 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :88084
[Server] ACK to client(87)
son: recv seg 88, seq :88084 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :89548
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :89548 ,ack :0
son :checkchecksum result:65407
[Server] Checksum Error!
son: recv seg 88, seq :91012 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :89548
[Server] ACK to client(87)
son: recv seg 88, seq :92476 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :89548
[Server] ACK to client(87)
son: recv seg 88, seq :93940 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :89548
[Server] ACK to client(87)
son: recv seg 88, seq :95404 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :89548
[Server] ACK to client(87)
son: recv seg 88, seq :96868 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :89548
[Server] ACK to client(87)
son: recv seg 88, seq :98332 ,ack :0
son :checkchecksum result:256
[Server] Checksum Error!
son: recv seg 88, seq :99796 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :89548
[Server] ACK to client(87)
son: recv seg 88, seq :1260 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :89548
[Server] ACK to client(87)
son: recv seg 88, seq :2724 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :89548
[Server] ACK to client(87)
son: recv seg 88, seq :89548 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :91012
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :91012 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :92476
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :92476 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :93940
[Server] finish sending ACK to client(87)
son: seg lost!
[Server] Seg Lost!
son: recv seg 88, seq :95404 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :93940
[Server] ACK to client(87)
son: recv seg 88, seq :96868 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :93940
[Server] ACK to client(87)
son: recv seg 88, seq :98332 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :93940
[Server] ACK to client(87)
son: recv seg 88, seq :99796 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :93940
[Server] ACK to client(87)
son: recv seg 88, seq :1260 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :93940
[Server] ACK to client(87)
son: recv seg 88, seq :2724 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :93940
[Server] ACK to client(87)
son: seg lost!
[Server] Seg Lost!
son: recv seg 88, seq :5652 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :93940
[Server] ACK to client(87)
son: recv seg 88, seq :7116 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :93940
[Server] ACK to client(87)
son: recv seg 88, seq :93940 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :95404
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :95404 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :96868
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :96868 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :98332
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :98332 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :99796
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :99796 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :1260
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :1260 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :2724
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :2724 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :4188
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :4188 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :5652
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :5652 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :7116
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :7116 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :8580
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :8580 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :10044
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :10044 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :11508
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :11508 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :12972
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :12972 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :14436
[Server] finish sending ACK to client(87)
son: seg lost!
[Server] Seg Lost!
son: recv seg 88, seq :15900 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :14436
[Server] ACK to client(87)
son: recv seg 88, seq :17364 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :14436
[Server] ACK to client(87)
son: recv seg 88, seq :18828 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :14436
[Server] ACK to client(87)
son: recv seg 88, seq :20292 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :14436
[Server] ACK to client(87)
son: recv seg 88, seq :21756 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :14436
[Server] ACK to client(87)
son: recv seg 88, seq :23220 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :14436
[Server] ACK to client(87)
son: recv seg 88, seq :24684 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :14436
[Server] ACK to client(87)
son: recv seg 88, seq :26148 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :14436
[Server] ACK to client(87)
son: recv seg 88, seq :27612 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :14436
[Server] ACK to client(87)
son: recv seg 88, seq :14436 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :15900
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :15900 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :17364
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :17364 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :18828
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :18828 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :20292
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :20292 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :21756
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :21756 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :23220
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :23220 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :24684
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :24684 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :26148
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :26148 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :27612
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :27612 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :29076
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :29076 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :30540
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :30540 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :32004
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :32004 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :33468
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :33468 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :34932
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :34932 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :36396
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :36396 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :37860
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :37860 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :39324
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :39324 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :40788
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :40788 ,ack :0
son :checkchecksum result:65534
[Server] Checksum Error!
son: recv seg 88, seq :42252 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :40788
[Server] ACK to client(87)
son: recv seg 88, seq :29076 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :40788
[Server] ACK to client(87)
son: recv seg 88, seq :30540 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :40788
[Server] ACK to client(87)
son: recv seg 88, seq :32004 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :40788
[Server] ACK to client(87)
son: recv seg 88, seq :33468 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :40788
[Server] ACK to client(87)
son: recv seg 88, seq :34932 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :40788
[Server] ACK to client(87)
son: recv seg 88, seq :36396 ,ack :0
son :checkchecksum result:2048
[Server] Checksum Error!
son: recv seg 88, seq :37860 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :40788
[Server] ACK to client(87)
son: recv seg 88, seq :39324 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :40788
[Server] ACK to client(87)
son: recv seg 88, seq :40788 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :42252
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :42252 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :43716
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :43716 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :45180
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :45180 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :46644
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :46644 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :48108
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :48108 ,ack :0
son :checkchecksum result:65407
[Server] Checksum Error!
son: recv seg 88, seq :49572 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :48108
[Server] ACK to client(87)
son: recv seg 88, seq :51036 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :48108
[Server] ACK to client(87)
son: recv seg 88, seq :52500 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :48108
[Server] ACK to client(87)
son: recv seg 88, seq :53964 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :48108
[Server] ACK to client(87)
son: recv seg 88, seq :55428 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :48108
[Server] ACK to client(87)
son: recv seg 88, seq :56892 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :48108
[Server] ACK to client(87)
son: recv seg 88, seq :58356 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :48108
[Server] ACK to client(87)
son: recv seg 88, seq :59820 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :48108
[Server] ACK to client(87)
son: recv seg 88, seq :61284 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :48108
[Server] ACK to client(87)
son: recv seg 88, seq :48108 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :49572
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :49572 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :51036
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :51036 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :52500
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :52500 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :53964
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :53964 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :55428
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :55428 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :56892
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :56892 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :58356
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :58356 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :59820
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :59820 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :61284
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :61284 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :62748
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :62748 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :64212
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :64212 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :65676
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :65676 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :67140
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :67140 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :68604
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :68604 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :70068
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :70068 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :71532
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :71532 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :72996
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :72996 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :74460
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :74460 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :75924
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :61284 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :75924
[Server] ACK to client(87)
son: recv seg 88, seq :62748 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :75924
[Server] ACK to client(87)
son: recv seg 88, seq :64212 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :75924
[Server] ACK to client(87)
son: recv seg 88, seq :65676 ,ack :0
son :checkchecksum result:8
[Server] Checksum Error!
son: recv seg 88, seq :67140 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :75924
[Server] ACK to client(87)
son: recv seg 88, seq :68604 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :75924
[Server] ACK to client(87)
son: recv seg 88, seq :70068 ,ack :0
son :checkchecksum result:65471
[Server] Checksum Error!
son: recv seg 88, seq :71532 ,ack :0
son :checkchecksum result:2
[Server] Checksum Error!
son: recv seg 88, seq :72996 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :75924
[Server] ACK to client(87)
son: recv seg 88, seq :74460 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :75924
[Server] ACK to client(87)
son: recv seg 88, seq :75924 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :77388
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :77388 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :78852
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :78852 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :80316
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :80316 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :81780
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :81780 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :83244
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :83244 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :84708
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :84708 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :86172
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :86172 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :87636
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :87636 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :89100
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :89100 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :90564
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :90564 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :92028
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :92028 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :93492
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :93492 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :94956
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :94956 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :96420
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :96420 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :97884
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :97884 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :99348
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :99348 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :812
[Server] finish sending ACK to client(87)
son: seg lost!
[Server] Seg Lost!
son: seg lost!
[Server] Seg Lost!
son: recv seg 88, seq :3740 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :812
[Server] ACK to client(87)
son: recv seg 88, seq :5204 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :812
[Server] ACK to client(87)
son: recv seg 88, seq :6668 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :812
[Server] ACK to client(87)
son: recv seg 88, seq :8132 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :812
[Server] ACK to client(87)
son: recv seg 88, seq :9596 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :812
[Server] ACK to client(87)
son: recv seg 88, seq :11060 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :812
[Server] ACK to client(87)
son: recv seg 88, seq :12524 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :812
[Server] ACK to client(87)
son: recv seg 88, seq :13988 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :812
[Server] ACK to client(87)
son: recv seg 88, seq :812 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :2276
[Server] finish sending ACK to client(87)
son: seg lost!
[Server] Seg Lost!
son: recv seg 88, seq :3740 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :2276
[Server] ACK to client(87)
son: recv seg 88, seq :5204 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :2276
[Server] ACK to client(87)
son: recv seg 88, seq :6668 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :2276
[Server] ACK to client(87)
son: recv seg 88, seq :8132 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :2276
[Server] ACK to client(87)
son: recv seg 88, seq :9596 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :2276
[Server] ACK to client(87)
son: recv seg 88, seq :11060 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :2276
[Server] ACK to client(87)
son: recv seg 88, seq :12524 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :2276
[Server] ACK to client(87)
son: recv seg 88, seq :13988 ,ack :0
son :checkchecksum result:32
[Server] Checksum Error!
son: recv seg 88, seq :15452 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :2276
[Server] ACK to client(87)
son: seg lost!
[Server] Seg Lost!
son: seg lost!
[Server] Seg Lost!
son: recv seg 88, seq :5204 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :2276
[Server] ACK to client(87)
son: recv seg 88, seq :6668 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :2276
[Server] ACK to client(87)
son: recv seg 88, seq :8132 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :2276
[Server] ACK to client(87)
son: recv seg 88, seq :9596 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :2276
[Server] ACK to client(87)
son: recv seg 88, seq :11060 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :2276
[Server] ACK to client(87)
son: recv seg 88, seq :12524 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :2276
[Server] ACK to client(87)
son: recv seg 88, seq :13988 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :2276
[Server] ACK to client(87)
son: recv seg 88, seq :15452 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :2276
[Server] ACK to client(87)
son: recv seg 88, seq :2276 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :3740
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :3740 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :5204
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :5204 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :6668
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :6668 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :8132
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :8132 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :9596
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :9596 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :11060
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :11060 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :12524
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :12524 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :13988
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :13988 ,ack :0
son :checkchecksum result:65531
[Server] Checksum Error!
son: recv seg 88, seq :15452 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :13988
[Server] ACK to client(87)
son: recv seg 88, seq :16916 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :13988
[Server] ACK to client(87)
son: recv seg 88, seq :18380 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :13988
[Server] ACK to client(87)
son: recv seg 88, seq :19844 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :13988
[Server] ACK to client(87)
son: recv seg 88, seq :21308 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :13988
[Server] ACK to client(87)
son: recv seg 88, seq :22772 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :13988
[Server] ACK to client(87)
son: recv seg 88, seq :24236 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :13988
[Server] ACK to client(87)
son: recv seg 88, seq :25700 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :13988
[Server] ACK to client(87)
son: recv seg 88, seq :27164 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :13988
[Server] ACK to client(87)
son: recv seg 88, seq :13988 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :15452
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :15452 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :16916
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :16916 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :18380
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :18380 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :19844
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :19844 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :21308
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :21308 ,ack :0
son :checkchecksum result:65531
[Server] Checksum Error!
son: recv seg 88, seq :22772 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :21308
[Server] ACK to client(87)
son: recv seg 88, seq :24236 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :21308
[Server] ACK to client(87)
son: recv seg 88, seq :25700 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :21308
[Server] ACK to client(87)
son: recv seg 88, seq :27164 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :21308
[Server] ACK to client(87)
son: recv seg 88, seq :28628 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :21308
[Server] ACK to client(87)
son: recv seg 88, seq :30092 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :21308
[Server] ACK to client(87)
son: recv seg 88, seq :31556 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :21308
[Server] ACK to client(87)
son: recv seg 88, seq :33020 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :21308
[Server] ACK to client(87)
son: recv seg 88, seq :34484 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :21308
[Server] ACK to client(87)
son: recv seg 88, seq :21308 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :22772
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :22772 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :24236
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :24236 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :25700
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :25700 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :27164
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :27164 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :28628
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :28628 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :30092
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :30092 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :31556
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :31556 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :33020
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :33020 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :34484
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :34484 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :35948
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :35948 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :37412
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :37412 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :38876
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :38876 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :40340
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :40340 ,ack :0
son :checkchecksum result:65534
[Server] Checksum Error!
son: recv seg 88, seq :41804 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :40340
[Server] ACK to client(87)
son: recv seg 88, seq :43268 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :40340
[Server] ACK to client(87)
son: recv seg 88, seq :44732 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :40340
[Server] ACK to client(87)
son: recv seg 88, seq :46196 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :40340
[Server] ACK to client(87)
son: recv seg 88, seq :47660 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :40340
[Server] ACK to client(87)
son: recv seg 88, seq :49124 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :40340
[Server] ACK to client(87)
son: recv seg 88, seq :35948 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :40340
[Server] ACK to client(87)
son: recv seg 88, seq :37412 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :40340
[Server] ACK to client(87)
son: recv seg 88, seq :38876 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :40340
[Server] ACK to client(87)
son: recv seg 88, seq :40340 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :41804
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :41804 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :43268
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :43268 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :44732
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :44732 ,ack :0
son :checkchecksum result:4096
[Server] Checksum Error!
son: recv seg 88, seq :46196 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :44732
[Server] ACK to client(87)
son: seg lost!
[Server] Seg Lost!
son: recv seg 88, seq :49124 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :44732
[Server] ACK to client(87)
son: recv seg 88, seq :50588 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :44732
[Server] ACK to client(87)
son: recv seg 88, seq :52052 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :44732
[Server] ACK to client(87)
son: recv seg 88, seq :53516 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :44732
[Server] ACK to client(87)
son: recv seg 88, seq :54980 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :44732
[Server] ACK to client(87)
son: recv seg 88, seq :56444 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :44732
[Server] ACK to client(87)
son: recv seg 88, seq :57908 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :44732
[Server] ACK to client(87)
son: recv seg 88, seq :44732 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :46196
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :46196 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :47660
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :47660 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :49124
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :49124 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :50588
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :50588 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :52052
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :52052 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :53516
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :53516 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :54980
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :54980 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :56444
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :56444 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :57908
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :57908 ,ack :0
son :checkchecksum result:8192
[Server] Checksum Error!
son: recv seg 88, seq :59372 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :57908
[Server] ACK to client(87)
son: recv seg 88, seq :60836 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :57908
[Server] ACK to client(87)
son: recv seg 88, seq :62300 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :57908
[Server] ACK to client(87)
son: recv seg 88, seq :63764 ,ack :0
son :checkchecksum result:32767
[Server] Checksum Error!
son: seg lost!
[Server] Seg Lost!
son: recv seg 88, seq :66692 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :57908
[Server] ACK to client(87)
son: recv seg 88, seq :68156 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :57908
[Server] ACK to client(87)
son: seg lost!
[Server] Seg Lost!
son: recv seg 88, seq :71084 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :57908
[Server] ACK to client(87)
son: recv seg 88, seq :57908 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :59372
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :59372 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :60836
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :60836 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :62300
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :62300 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :63764
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :63764 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :65228
[Server] finish sending ACK to client(87)
son: seg lost!
[Server] Seg Lost!
son: recv seg 88, seq :66692 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :65228
[Server] ACK to client(87)
son: seg lost!
[Server] Seg Lost!
son: recv seg 88, seq :69620 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :65228
[Server] ACK to client(87)
son: recv seg 88, seq :71084 ,ack :0
son :checkchecksum result:2048
[Server] Checksum Error!
son: recv seg 88, seq :72548 ,ack :0
son :checkchecksum result:49151
[Server] Checksum Error!
son: recv seg 88, seq :74012 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :65228
[Server] ACK to client(87)
son: recv seg 88, seq :75476 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :65228
[Server] ACK to client(87)
son: recv seg 88, seq :76940 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :65228
[Server] ACK to client(87)
son: recv seg 88, seq :78404 ,ack :0
son :checkchecksum result:2048
[Server] Checksum Error!
son: recv seg 88, seq :65228 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :66692
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :66692 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :68156
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :68156 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :69620
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :69620 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :71084
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :71084 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :72548
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :72548 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :74012
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :74012 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :75476
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :75476 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :76940
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :76940 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :78404
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :78404 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :79868
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :79868 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :81332
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :81332 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :82796
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :82796 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :84260
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :84260 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :85724
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :85724 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :87188
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :87188 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :88652
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :88652 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :90116
[Server] finish sending ACK to client(87)
son: seg lost!
[Server] Seg Lost!
son: recv seg 88, seq :91580 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :90116
[Server] ACK to client(87)
son: recv seg 88, seq :93044 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :90116
[Server] ACK to client(87)
son: recv seg 88, seq :79868 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :90116
[Server] ACK to client(87)
son: recv seg 88, seq :81332 ,ack :0
son :checkchecksum result:1
[Server] Checksum Error!
son: recv seg 88, seq :82796 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :90116
[Server] ACK to client(87)
son: recv seg 88, seq :84260 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :90116
[Server] ACK to client(87)
son: recv seg 88, seq :85724 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :90116
[Server] ACK to client(87)
son: recv seg 88, seq :87188 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :90116
[Server] ACK to client(87)
son: recv seg 88, seq :88652 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :90116
[Server] ACK to client(87)
son: recv seg 88, seq :90116 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :91580
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :91580 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :93044
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :93044 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :94508
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :94508 ,ack :0
son :checkchecksum result:16384
[Server] Checksum Error!
son: recv seg 88, seq :95972 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :94508
[Server] ACK to client(87)
son: recv seg 88, seq :97436 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :94508
[Server] ACK to client(87)
son: recv seg 88, seq :98900 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :94508
[Server] ACK to client(87)
son: recv seg 88, seq :364 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :94508
[Server] ACK to client(87)
son: recv seg 88, seq :1828 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :94508
[Server] ACK to client(87)
son: recv seg 88, seq :3292 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :94508
[Server] ACK to client(87)
son: recv seg 88, seq :4756 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :94508
[Server] ACK to client(87)
son: recv seg 88, seq :6220 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :94508
[Server] ACK to client(87)
son: recv seg 88, seq :7684 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :94508
[Server] ACK to client(87)
son: recv seg 88, seq :94508 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :95972
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :95972 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :97436
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :97436 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :98900
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :98900 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :364
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :364 ,ack :0
son :checkchecksum result:65023
[Server] Checksum Error!
son: recv seg 88, seq :1828 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :364
[Server] ACK to client(87)
son: recv seg 88, seq :3292 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :364
[Server] ACK to client(87)
son: recv seg 88, seq :4756 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :364
[Server] ACK to client(87)
son: recv seg 88, seq :6220 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :364
[Server] ACK to client(87)
son: recv seg 88, seq :7684 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :364
[Server] ACK to client(87)
son: recv seg 88, seq :9148 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :364
[Server] ACK to client(87)
son: recv seg 88, seq :10612 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :364
[Server] ACK to client(87)
son: recv seg 88, seq :12076 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :364
[Server] ACK to client(87)
son: recv seg 88, seq :13540 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :364
[Server] ACK to client(87)
son: seg lost!
[Server] Seg Lost!
son: recv seg 88, seq :1828 ,ack :0
son :checkchecksum result:65519
[Server] Checksum Error!
son: recv seg 88, seq :3292 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :364
[Server] ACK to client(87)
son: recv seg 88, seq :4756 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :364
[Server] ACK to client(87)
son: recv seg 88, seq :6220 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :364
[Server] ACK to client(87)
son: seg lost!
[Server] Seg Lost!
son: recv seg 88, seq :9148 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :364
[Server] ACK to client(87)
son: recv seg 88, seq :10612 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :364
[Server] ACK to client(87)
son: recv seg 88, seq :12076 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :364
[Server] ACK to client(87)
son: recv seg 88, seq :13540 ,ack :0
son :checkchecksum result:61439
[Server] Checksum Error!
son: recv seg 88, seq :364 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :1828
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :1828 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :3292
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :3292 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :4756
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :4756 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :6220
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :6220 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :7684
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :7684 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :9148
[Server] finish sending ACK to client(87)
son: seg lost!
[Server] Seg Lost!
son: recv seg 88, seq :10612 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :9148
[Server] ACK to client(87)
son: recv seg 88, seq :12076 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :9148
[Server] ACK to client(87)
son: recv seg 88, seq :13540 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :9148
[Server] ACK to client(87)
son: recv seg 88, seq :15004 ,ack :0
son :checkchecksum result:512
[Server] Checksum Error!
son: recv seg 88, seq :16468 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :9148
[Server] ACK to client(87)
son: recv seg 88, seq :17932 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :9148
[Server] ACK to client(87)
son: seg lost!
[Server] Seg Lost!
son: recv seg 88, seq :20860 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :9148
[Server] ACK to client(87)
son: recv seg 88, seq :22324 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :9148
[Server] ACK to client(87)
son: seg lost!
[Server] Seg Lost!
son: recv seg 88, seq :10612 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :9148
[Server] ACK to client(87)
son: recv seg 88, seq :12076 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :9148
[Server] ACK to client(87)
son: recv seg 88, seq :13540 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :9148
[Server] ACK to client(87)
son: recv seg 88, seq :15004 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :9148
[Server] ACK to client(87)
son: recv seg 88, seq :16468 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :9148
[Server] ACK to client(87)
son: recv seg 88, seq :17932 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :9148
[Server] ACK to client(87)
son: recv seg 88, seq :19396 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :9148
[Server] ACK to client(87)
son: recv seg 88, seq :20860 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :9148
[Server] ACK to client(87)
son: recv seg 88, seq :22324 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :9148
[Server] ACK to client(87)
son: recv seg 88, seq :9148 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :10612
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :10612 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :12076
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :12076 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :13540
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :13540 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :15004
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :15004 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :16468
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :16468 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :17932
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :17932 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :19396
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :19396 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :20860
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :20860 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :22324
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :22324 ,ack :0
son :checkchecksum result:2
[Server] Checksum Error!
son: recv seg 88, seq :23788 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :22324
[Server] ACK to client(87)
son: recv seg 88, seq :25252 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :22324
[Server] ACK to client(87)
son: recv seg 88, seq :26716 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :22324
[Server] ACK to client(87)
son: recv seg 88, seq :28180 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :22324
[Server] ACK to client(87)
son: recv seg 88, seq :29644 ,ack :0
son :checkchecksum result:65534
[Server] Checksum Error!
son: recv seg 88, seq :31108 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :22324
[Server] ACK to client(87)
son: recv seg 88, seq :32572 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :22324
[Server] ACK to client(87)
son: recv seg 88, seq :34036 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :22324
[Server] ACK to client(87)
son: recv seg 88, seq :35500 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :22324
[Server] ACK to client(87)
son: recv seg 88, seq :22324 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :23788
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :23788 ,ack :0
son :checkchecksum result:65533
[Server] Checksum Error!
son: recv seg 88, seq :25252 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :23788
[Server] ACK to client(87)
son: recv seg 88, seq :26716 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :23788
[Server] ACK to client(87)
son: recv seg 88, seq :28180 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :23788
[Server] ACK to client(87)
son: recv seg 88, seq :29644 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :23788
[Server] ACK to client(87)
son: recv seg 88, seq :31108 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :23788
[Server] ACK to client(87)
son: recv seg 88, seq :32572 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :23788
[Server] ACK to client(87)
son: recv seg 88, seq :34036 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :23788
[Server] ACK to client(87)
son: recv seg 88, seq :35500 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :23788
[Server] ACK to client(87)
son: recv seg 88, seq :36964 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :23788
[Server] ACK to client(87)
son: recv seg 88, seq :23788 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :25252
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :25252 ,ack :0
son :checkchecksum result:32
[Server] Checksum Error!
son: recv seg 88, seq :26716 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :25252
[Server] ACK to client(87)
son: recv seg 88, seq :28180 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :25252
[Server] ACK to client(87)
son: recv seg 88, seq :29644 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :25252
[Server] ACK to client(87)
son: recv seg 88, seq :31108 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :25252
[Server] ACK to client(87)
son: recv seg 88, seq :32572 ,ack :0
son :checkchecksum result:32767
[Server] Checksum Error!
son: recv seg 88, seq :34036 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :25252
[Server] ACK to client(87)
son: recv seg 88, seq :35500 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :25252
[Server] ACK to client(87)
son: recv seg 88, seq :36964 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :25252
[Server] ACK to client(87)
son: recv seg 88, seq :38428 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :25252
[Server] ACK to client(87)
son: recv seg 88, seq :25252 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :26716
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :26716 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :28180
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :28180 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :29644
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :29644 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :31108
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :31108 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :32572
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :32572 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :34036
[Server] finish sending ACK to client(87)
son: seg lost!
[Server] Seg Lost!
son: recv seg 88, seq :35500 ,ack :0
son :checkchecksum result:63487
[Server] Checksum Error!
son: recv seg 88, seq :36964 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :34036
[Server] ACK to client(87)
son: recv seg 88, seq :38428 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :34036
[Server] ACK to client(87)
son: recv seg 88, seq :39892 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :34036
[Server] ACK to client(87)
son: recv seg 88, seq :41356 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :34036
[Server] ACK to client(87)
son: recv seg 88, seq :42820 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :34036
[Server] ACK to client(87)
son: recv seg 88, seq :44284 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :34036
[Server] ACK to client(87)
son: recv seg 88, seq :45748 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :34036
[Server] ACK to client(87)
son: recv seg 88, seq :47212 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :34036
[Server] ACK to client(87)
son: recv seg 88, seq :34036 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :35500
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :35500 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :36964
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :36964 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :38428
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :38428 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :39892
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :39892 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :41356
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :41356 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :42820
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :42820 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :44284
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :44284 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :45748
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :45748 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :47212
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :47212 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :48676
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :48676 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :50140
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :50140 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :51604
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :51604 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :53068
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :53068 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :54532
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :54532 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :55996
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :55996 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :57460
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :57460 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :58924
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :58924 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :60388
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :60388 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :61852
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :61852 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :63316
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :63316 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :64780
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :64780 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :66244
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :66244 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :67708
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :67708 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :69172
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :69172 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :70636
[Server] finish sending ACK to client(87)
son: seg lost!
[Server] Seg Lost!
son: recv seg 88, seq :72100 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :70636
[Server] ACK to client(87)
son: recv seg 88, seq :73564 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :70636
[Server] ACK to client(87)
son: recv seg 88, seq :75028 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :70636
[Server] ACK to client(87)
son: seg lost!
[Server] Seg Lost!
son: recv seg 88, seq :77956 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :70636
[Server] ACK to client(87)
son: recv seg 88, seq :64780 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :70636
[Server] ACK to client(87)
son: recv seg 88, seq :66244 ,ack :0
son :checkchecksum result:64511
[Server] Checksum Error!
son: recv seg 88, seq :67708 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :70636
[Server] ACK to client(87)
son: recv seg 88, seq :69172 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence not equal
son: send seg 87, seq :0 ,ack :70636
[Server] ACK to client(87)
son: recv seg 88, seq :70636 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :72100
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :72100 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :73564
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :73564 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :75028
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :75028 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :76492
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :76492 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :77956
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :77956 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :79420
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :79420 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:1464
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :80884
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :80884 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> DATA
[Server] sequence equal, then save data
data length:673
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :81557
[Server] finish sending ACK to client(87)
son: recv seg 88, seq :81557 ,ack :0
son :checkchecksum result:0
[Server] port(88) received a seg
[Server] State CONNECTED -> FIN
[Server] begin to send ACk to client(87)
son: send seg 87, seq :0 ,ack :81557
[Server] finish sending ACK to client(87)
close it now
TCP connections closed
